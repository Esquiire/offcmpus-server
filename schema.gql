# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AcceptedLeaseInfo {
  history_id: String!
  lease_id: String!
}

"""Response from USPS Address Verify API"""
type AddressVerification {
  address_1: String!
  address_2: String!
  city: String!
  state: String!
  zip: String!
}

type AddressVerificationAPIResponse {
  data: AddressVerification
  error: String
  success: Boolean!
}

"""Cas Auth Information"""
type CasAuthInfo {
  auth_type: String
  cas_id: String
  institution_id: String
}

input CollectionFetchInput {
  count: Int!
  offset: Int!
}

"""Ownership Confirmation Activity"""
type ConfirmationActivity {
  date_submitted: String!
  full_name: String
  message: String!
  user_id: String!
  user_type: String!
}

type DeclineInfo {
  date: String!
  student_id: String!
}

type Digit {
  value: Float!
}

"""Represents a digit"""
type DigitAPIResponse {
  data: Digit
  error: String
  success: Boolean!
}

"""The directions coordinates information"""
type DirectionCoordinates {
  coordinates: [[Float!]!]!
  distance: Float!
}

"""Feedback submission entry"""
type Feedback {
  date_submitted: String!
  message: String!
  submitter_id: String!
  tags: [String!]!
  user_type: String!
}

type FeedbackAPIResponse {
  data: Feedback
  error: String
  success: Boolean!
}

"""a collection of feedback response"""
type FeedbackCollection {
  feedback_collection: [Feedback!]!
}

type FeedbackCollectionAPIResponse {
  data: FeedbackCollection
  error: String
  success: Boolean!
}

"""Institution Model"""
type Institution {
  _id: ID!
  edu_suffix: String
  location: InstitutionLocationInfo!
  name: String!
  s3_thumb_key: String
}

type InstitutionAPIResponse {
  data: Institution
  error: String
  success: Boolean!
}

"""A collection of Institutions"""
type InstitutionList {
  institutions: [Institution!]!
}

type InstitutionListAPIResponse {
  data: InstitutionList
  error: String
  success: Boolean!
}

"""Institution Location"""
type InstitutionLocationInfo {
  address: String!
  city: String!
  latitude: Float!
  longitude: Float!
  state: String!
  zip: String!
}

"""Landlord model"""
type Landlord {
  _id: ID!
  confirmation_key: String
  email: String!
  first_name: String!
  landlord_reset_key: String
  landlord_reset_link_exp: String
  last_name: String!
  onboarded: Boolean
  password: String
  phone_number: String
  type: String
  user_settings: LandlordUserSettings
}

type LandlordAPIResponse {
  data: Landlord
  error: String
  success: Boolean!
}

input LandlordInput {
  _id: String
  email: String
  first_name: String
  last_name: String
  password: String
  phone_number: String
}

"""Landlord User Settings"""
type LandlordUserSettings {
  push_subscriptions: [PushSubscription!]!
  recieve_email_notifications: Boolean!
}

"""Schema for the Lease document"""
type Lease {
  _id: ID!
  active: Boolean!
  external_occupant: Boolean!
  lease_availability_end_date: String
  lease_availability_start_date: String
  lease_document_id: String
  lease_history: [LeaseHistory!]!
  occupant_doc: Student
  occupant_id: String
  ownership_id: String!
  price_per_month: Float!
  priority: LeasePriority
  student_interests: [StudentInterest!]!
  students_that_declined: [DeclineInfo!]
}

type LeaseAndAvailability {
  able_to_lease: Boolean!
  lease: Lease!
}

"""API Response class for the Lease object."""
type LeaseAPIResponse {
  data: Lease
  error: String
  success: Boolean!
}

"""A collection of leases"""
type LeaseCollection {
  leases: [Lease!]!
}

"""API Response class for Lease collection object"""
type LeaseCollectionAPIResponse {
  data: LeaseCollection
  error: String
  success: Boolean!
}

"""Lease Document Schema"""
type LeaseDocument {
  _id: ID!
  documents: [S3Document!]!
  landlord_id: String!
  lease_name: String!
}

"""API Response class for Lease Document"""
type LeaseDocumentAPIResponse {
  data: LeaseDocument
  error: String
  success: Boolean!
}

"""Information about an instance of a lease's activation"""
type LeaseHistory {
  _id: String
  end_date: String!
  price: Float!
  property_images: [LeaseImageInfo!]!
  review_of_landlord: ReviewAndResponse
  review_of_property: ReviewAndResponse
  start_date: String!
  student_id: String!
}

type LeaseHistorySummary {
  landlord: Landlord!
  lease: Lease!
  lease_history: LeaseHistory!
  lease_history_id: String!
  property: Property!
  room_no: Int!
}

type LeaseHistorySummaryAPIResponse {
  data: LeaseHistorySummary
  error: String
  success: Boolean!
}

type LeaseHistorySummaryCollection {
  histories: [LeaseHistorySummary!]!
}

type LeaseHistorySummaryCollectionAPIResponse {
  data: LeaseHistorySummaryCollection
  error: String
  success: Boolean!
}

"""Property Image info"""
type LeaseImageInfo {
  date_uploaded: String!
  s3_key: String!
}

"""Object model for the priority object for a lease"""
type LeasePriority {
  end_date: String!
  level: Int!
  start_date: String!
}

"""Summary of lease information"""
type LeaseSummary {
  institutions: [Institution!]!
  lease: Lease!
  lease_doc: LeaseDocument
  property: Property!
  room_no: Int!
  students: [Student!]!
}

"""API Response for lease summary"""
type LeaseSummaryAPIResponse {
  data: LeaseSummary
  error: String
  success: Boolean!
}

"""Input for describing the creation of a lease"""
input LeaseUpdateInput {
  active: Boolean
  external_occupant: Boolean
  lease_id: String!
  lease_priority: Int
  price_per_month: Float
  priority_end_date: String
  priority_start_date: String
}

"""Multiple lease documents"""
type MultipleLeaseDocuments {
  lease_documents: [LeaseDocument!]!
}

"""Multiple lease documents response"""
type MultipleLeaseDocumentsAPIResponse {
  data: MultipleLeaseDocuments
  error: String
  success: Boolean!
}

type Mutation {
  acceptLeaseAgreement(lease_id: String!, student_id: String!): LeaseAPIResponse!
  acceptOrDeclineStudentInterest(action: String!, lease_id: String!, student_id: String!): LeaseAPIResponse!
  activateLease(lease_document_id: String!, lease_end_date: String!, lease_id: String!, lease_start_date: String!, price_per_month: Float!): LeaseAPIResponse!
  addImagesToProperty(property_id: String!, s3_keys: [String!]!): PropertyAPIResponse!
  addLandlordResponse(history_id: String!, lease_id: String!, response_type: String!, review_response: String!): LeaseAPIResponse!
  addLandlordResponseToReview(landlord_id: String!, landlord_response: String!, lease_history_id: String!, lease_id: String!): LeaseAPIResponse!
  addLeaseHistory(end_date: String!, lease_id: String!, start_date: String!, student_id: String!): LeaseAPIResponse!
  addNewLeaseDocument(document_keys: [String!]!, document_mimes: [String!]!, landlord_id: String!, lease_name: String!): LeaseDocumentAPIResponse!
  addOwnershipConfirmationActivity(date_submitted: String!, message: String!, ownership_id: String!, user_id: String!, user_type: String!): OwnershipAPIResponse!
  addOwnershipDocuments(documents_info: [OwnershipDocumentInput!]!, ownership_id: String!): OwnershipAPIResponse!
  addPropertyToStudentCollection(property_id: String!, student_id: String!): PropertyCollectionEntriesAPIResponse!
  addReviewForLease(landlord_rating: Float!, landlord_review: String!, lease_id: String!, property_images: [String!]!, property_rating: Float!, property_review: String!, student_id: String!): LeaseAPIResponse!
  changeOwnershipStatus(new_status: String!, ownership_id: String!, status_changer_user_id: String!, status_changer_user_type: String!, with_landlord: Boolean!, with_property: Boolean!): OwnershipAPIResponse!
  confirmLandlordEmail(confirm_key: String!, email: String!): LandlordAPIResponse!
  confirmStudentEmail(confirm_key: String!, email: String!): StudentAPIResponse!
  createLandlord(new_landlord: LandlordInput!): LandlordAPIResponse!
  createOwnershipReview(address_line: String!, address_line_2: String!, city: String!, landlord_id: String!, state: String!, zip_code: String!): OwnershipAPIResponse!
  createStudent(email: String!, first_name: String!, last_name: String!, password: String!, preferred_email: String): StudentAPIResponse!
  declineLeaseAgreement(lease_id: String!, student_id: String!): LeaseAPIResponse!
  expressInterest(lease_id: String!, student_id: String!): LeaseAPIResponse!
  markStudentNotificationAsSeen(notification_id: String!, student_id: String!): StudentNotificationAPIResponse!
  removeImageFromProperty(property_id: String!, s3_key: String!): PropertyAPIResponse!
  removePropertyFromStudentCollection(property_id: String!, student_id: String!): PropertyCollectionEntriesAPIResponse!
  resendEmailConfirmation: StudentAPIResponse!
  resetPassword(email: String!, new_password: String!, reset_key: String!): LandlordAPIResponse!
  saveConveniencePreferences(preferences: [String!]!): StudentAPIResponse!
  sendPasswordReset(email: String!): LandlordAPIResponse!
  setLandlordOnboarded(landlord_id: String!): LandlordAPIResponse!
  Stats_LandlordAccountCreation: StatsResponse!
  Stats_LandlordLogin: StatsResponse!
  Stats_LandlordOpenLease(lease_id: String!, property_id: String!): StatsResponse!
  Stats_StudentAccountCreation: StatsResponse!
  Stats_StudentLogin: StatsResponse!
  submitFeedback(message: String!, submitter_id: String!, tags: [String!]!, user_type: String!): FeedbackAPIResponse!
  updatePhoneNumber(landlord_id: String!, phone_number: String!): LandlordAPIResponse!
  updatePropertyDetails(bathrooms: Int, description: String, furnished: Boolean, has_ac: Boolean, has_heater: Boolean, has_washer: Boolean, property_id: String!, rooms: Int, sq_ft: Int): PropertyAPIResponse!
  updateStudent(_id: String!, new_student: StudentInput!): StudentAPIResponse!
  updateStudentSearchStatus(id: String!, price_end: Float, price_start: Float, search_end: String, search_start: String, searching: Boolean!): StudentAPIResponse!
  updateUnoccupiedLeases(leases_info: [LeaseUpdateInput!]!, ownership_id: String!): LeaseCollectionAPIResponse!
}

type NotificationAction {
  action_text: String!
  action_url: String!
}

type NumberAPIResponse {
  data: NumberValue
  error: String
  success: Boolean!
}

type NumberValue {
  value: Float!
}

"""Property Ownership Document Information"""
type Ownership {
  _id: ID!
  confirmation_activity: [ConfirmationActivity!]!
  date_submitted: String!
  landlord_doc: Landlord
  landlord_id: String!
  ownership_documents: [OwnershipDocument!]!
  property_doc: Property
  property_id: String
  status: String!
  status_change_history: [StatusChangeInfo!]!
}

type OwnershipAPIResponse {
  data: Ownership
  error: String
  success: Boolean!
}

"""Property Ownership Collection"""
type OwnershipCollection {
  ownerships: [Ownership!]!
}

type OwnershipCollectionAPIResponse {
  data: OwnershipCollection
  error: String
  success: Boolean!
}

"""Ownership Document Information"""
type OwnershipDocument {
  date_uploaded: String!
  format: String!
  s3_doc_key: String!
}

"""Input for adding ownership documents"""
input OwnershipDocumentInput {
  format: String!
  s3_doc_key: String!
}

"""Property model"""
type Property {
  _id: ID!
  address_line: String!
  address_line_2: String
  city: String!
  details: PropertyDetails
  directions: [PropertyDirections!]
  landlord: String!
  landlord_doc: Landlord
  leases: [Lease!]
  state: String!
  zip: String!
}

type PropertyAPIResponse {
  data: Property
  error: String
  success: Boolean!
}

"""An array of collection entries"""
type PropertyCollectionEntries {
  collection_entries: [Property!]!
}

type PropertyCollectionEntriesAPIResponse {
  data: PropertyCollectionEntries
  error: String
  success: Boolean!
}

"""Details describing the property"""
type PropertyDetails {
  bathrooms: Int!
  description: String!
  furnished: Boolean!
  has_ac: Boolean!
  has_heater: Boolean!
  has_washer: Boolean!
  property_images: [PropertyImageInfo!]!
  rooms: Int!
  sq_ft: Float!
}

"""Property directions to an institution"""
type PropertyDirections {
  cycling_regular_directions: [DirectionCoordinates!]
  driving_car_directions: [DirectionCoordinates!]
  foot_walking_directions: [DirectionCoordinates!]
  institution_id: String!
}

"""Property Image info"""
type PropertyImageInfo {
  date_uploaded: String!
  s3_key: String!
}

"""Collection of properties"""
type PropertyList {
  properties: [Property!]!
}

type PropertyListAPIResponse {
  data: PropertyList
  error: String
  success: Boolean!
}

input PropertyReviewInput {
  count: Int
  offset: Int
  withReviews: Boolean!
}

input PropertySearchInput {
  count: Int
  offset: Int
}

type PropertySearchResult {
  landlord_first_name: String!
  landlord_last_name: String!
  landlord_rating_avg: Float!
  landlord_rating_count: Int!
  lease_count: Int!
  price_range: [Float!]!
  property: Property!
  property_rating_avg: Float!
  property_rating_count: Int!
}

type PropertySearchResultCollection {
  search_results: [PropertySearchResult!]!
}

type PropertySearchResultCollectionAPIResult {
  data: PropertySearchResultCollection
  error: String
  success: Boolean!
}

type PropertySummary {
  landlord: Landlord!
  leases: [LeaseAndAvailability!]!
  property: Property!
}

type PropertySummaryAPIResponse {
  data: PropertySummary
  error: String
  success: Boolean!
}

"""Push Subscription Details"""
type PushSubscription {
  endpoint: String!
  keys: PushSubscriptionKeys!
}

"""Keys for push subscription"""
type PushSubscriptionKeys {
  auth: String!
  p256dh: String!
}

type Query {
  canAddReview(property_id: String!, student_id: String!): DigitAPIResponse!
  checkEligibleForLeaseAgreement(lease_id: String!, student_id: String!): LeaseAPIResponse!
  checkPasswordResetKey(email: String!, reset_key: String!): LandlordAPIResponse!
  getAcceptedLeaseInfo(history_id: String!, lease_id: String!, student_id: String!): LeaseHistorySummaryAPIResponse!
  getAcceptedLeases(student_id: String!): LeaseHistorySummaryCollectionAPIResponse!
  getFeedback(limit: Float!, offset: Float!): FeedbackCollectionAPIResponse!
  getInstitution(_id: String!): InstitutionAPIResponse!
  getLandlord(_id: String!): LandlordAPIResponse!
  getLeaseDocumentsForLandlord(landlord_id: String!): MultipleLeaseDocumentsAPIResponse!
  getLeasesAndOccupants(ownership_id: String!): LeaseCollectionAPIResponse!
  getLeaseSummary(lease_id: String!): LeaseSummaryAPIResponse!
  getMatchingInstitutions(partial_name: String!): InstitutionListAPIResponse!
  getOwnership(_id: String!): OwnershipAPIResponse!
  getOwnershipConflicts(ownership_id: String!): OwnershipCollectionAPIResponse!
  getOwnershipForProperty(landlord_id: String!, property_id: String!): OwnershipAPIResponse!
  getOwnershipsForLandlord(landlord_id: String!, with_landlord: Boolean, with_properties: Boolean): OwnershipCollectionAPIResponse!
  getOwnershipsInReview: OwnershipCollectionAPIResponse!
  getPropertiesForLandlord(landlord_id: String!, status: String, with_leases: Boolean): PropertyListAPIResponse!
  getProperty(_id: String!, reviewOptions: PropertyReviewInput!, withLandlord: Boolean!): PropertyAPIResponse!
  getPropertyForOwnership(ownership_id: String!): PropertyAPIResponse!
  getPropertyOwnedByLandlord(landlord_id: String!, property_id: String!, with_leases: Boolean): PropertyAPIResponse!
  getPropertySummary(property_id: String!, student_id: String!): PropertySummaryAPIResponse!
  getRoomNo(lease_id: String!, ownership_id: String!): NumberAPIResponse!
  getStudent(_id: String!): StudentAPIResponse!
  getStudentNotifications(student_id: String!): StudentNotificationAPIResponse!
  getStudentSavedCollection(_id: String!, collectionOptions: CollectionFetchInput!): PropertyCollectionEntriesAPIResponse!
  resendEamilConfirmation(landlord_id: String!): LandlordAPIResponse!
  searchForProperties(distance: Float!, price_end: Float!, price_start: Float!, rooms: Int!): PropertySearchResultCollectionAPIResult!
  searchProperties(searchOptions: PropertySearchInput!): PropertyListAPIResponse!
  verifyAddress(address_1: String!, address_2: String!, city: String!, state: String!, zip: String!): AddressVerificationAPIResponse!
}

"""Review & Response"""
type ReviewAndResponse {
  rating: Float!
  response: String
  review: String!
}

type S3Document {
  mime_type: String!
  s3_key: String!
}

"""Status of student search"""
type SearchStatus {
  date_updated: String!
  price_end: Float
  price_start: Float
  search_end: String
  search_start: String
  searching: Boolean!
}

type StatsResponse {
  v: String!
}

"""Describes a status change in an ownership"""
type StatusChangeInfo {
  changed_from: String!
  changed_to: String!
  date_changed: String!
  status_changer_full_name: String
  status_changer_user_id: String!
  status_changer_user_type: String!
}

"""Student model"""
type Student {
  _id: ID!
  accepted_leases: [AcceptedLeaseInfo!]
  auth_info: CasAuthInfo
  confirmation_key: [String!]
  conveinence_setup: Boolean
  convenience_tags: [String!]
  date_registered: String
  edu_email: String
  elevated_privileges: [String!]
  email: String
  first_name: String!
  last_name: String!
  notifications: [StudentNotification!]
  password: String
  phone_number: String
  saved_collection: [String!]
  search_status: SearchStatus
  type: String
  user_settings: StudentUserSettings
}

type StudentAPIResponse {
  data: Student
  error: String
  success: Boolean!
}

input StudentInput {
  _id: String
  email: String
  first_name: String
  last_name: String
}

"""Student interest object"""
type StudentInterest {
  accepted: Boolean
  date: String!
  student_id: String!
}

type StudentNotification {
  _id: String!
  action: NotificationAction
  body: String!
  date_created: String!
  date_seen: String
  subject: String!
}

type StudentNotificationAPIResponse {
  data: StudentNotificationCollection
  error: String
  success: Boolean!
}

type StudentNotificationCollection {
  notifications: [StudentNotification!]!
}

"""Student User Settinhs"""
type StudentUserSettings {
  push_subscriptions: [PushSubscription!]!
  recieve_email_notifications: Boolean!
}

type Subscription {
  newFeedback: Feedback!
}
